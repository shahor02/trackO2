//
// File generated by rootcint at Thu Dec 17 18:43:57 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME trackO2Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "trackO2Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void AliceO2cLcLBasecLcLTrackcLcLTrackPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AliceO2cLcLBasecLcLTrackcLcLTrackPar_Dictionary();
   static void delete_AliceO2cLcLBasecLcLTrackcLcLTrackPar(void *p);
   static void deleteArray_AliceO2cLcLBasecLcLTrackcLcLTrackPar(void *p);
   static void destruct_AliceO2cLcLBasecLcLTrackcLcLTrackPar(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliceO2::Base::Track::TrackPar*)
   {
      ::AliceO2::Base::Track::TrackPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::AliceO2::Base::Track::TrackPar),0);
      static ::ROOT::TGenericClassInfo 
         instance("AliceO2::Base::Track::TrackPar", "./Track.h", 39,
                  typeid(::AliceO2::Base::Track::TrackPar), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &AliceO2cLcLBasecLcLTrackcLcLTrackPar_Dictionary, isa_proxy, 0,
                  sizeof(::AliceO2::Base::Track::TrackPar) );
      instance.SetDelete(&delete_AliceO2cLcLBasecLcLTrackcLcLTrackPar);
      instance.SetDeleteArray(&deleteArray_AliceO2cLcLBasecLcLTrackcLcLTrackPar);
      instance.SetDestructor(&destruct_AliceO2cLcLBasecLcLTrackcLcLTrackPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliceO2::Base::Track::TrackPar*)
   {
      return GenerateInitInstanceLocal((::AliceO2::Base::Track::TrackPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliceO2::Base::Track::TrackPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AliceO2cLcLBasecLcLTrackcLcLTrackPar_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::AliceO2::Base::Track::TrackPar*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void AliceO2cLcLBasecLcLTrackcLcLTrackParCov_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AliceO2cLcLBasecLcLTrackcLcLTrackParCov_Dictionary();
   static void delete_AliceO2cLcLBasecLcLTrackcLcLTrackParCov(void *p);
   static void deleteArray_AliceO2cLcLBasecLcLTrackcLcLTrackParCov(void *p);
   static void destruct_AliceO2cLcLBasecLcLTrackcLcLTrackParCov(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliceO2::Base::Track::TrackParCov*)
   {
      ::AliceO2::Base::Track::TrackParCov *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::AliceO2::Base::Track::TrackParCov),0);
      static ::ROOT::TGenericClassInfo 
         instance("AliceO2::Base::Track::TrackParCov", "./Track.h", 66,
                  typeid(::AliceO2::Base::Track::TrackParCov), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &AliceO2cLcLBasecLcLTrackcLcLTrackParCov_Dictionary, isa_proxy, 0,
                  sizeof(::AliceO2::Base::Track::TrackParCov) );
      instance.SetDelete(&delete_AliceO2cLcLBasecLcLTrackcLcLTrackParCov);
      instance.SetDeleteArray(&deleteArray_AliceO2cLcLBasecLcLTrackcLcLTrackParCov);
      instance.SetDestructor(&destruct_AliceO2cLcLBasecLcLTrackcLcLTrackParCov);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliceO2::Base::Track::TrackParCov*)
   {
      return GenerateInitInstanceLocal((::AliceO2::Base::Track::TrackParCov*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliceO2::Base::Track::TrackParCov*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AliceO2cLcLBasecLcLTrackcLcLTrackParCov_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::AliceO2::Base::Track::TrackParCov*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_AliceO2cLcLBasecLcLTrackcLcLTrackPar(void *p) {
      delete ((::AliceO2::Base::Track::TrackPar*)p);
   }
   static void deleteArray_AliceO2cLcLBasecLcLTrackcLcLTrackPar(void *p) {
      delete [] ((::AliceO2::Base::Track::TrackPar*)p);
   }
   static void destruct_AliceO2cLcLBasecLcLTrackcLcLTrackPar(void *p) {
      typedef ::AliceO2::Base::Track::TrackPar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliceO2::Base::Track::TrackPar

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_AliceO2cLcLBasecLcLTrackcLcLTrackParCov(void *p) {
      delete ((::AliceO2::Base::Track::TrackParCov*)p);
   }
   static void deleteArray_AliceO2cLcLBasecLcLTrackcLcLTrackParCov(void *p) {
      delete [] ((::AliceO2::Base::Track::TrackParCov*)p);
   }
   static void destruct_AliceO2cLcLBasecLcLTrackcLcLTrackParCov(void *p) {
      typedef ::AliceO2::Base::Track::TrackParCov current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliceO2::Base::Track::TrackParCov

/********************************************************
* trackO2Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabletrackO2Dict();

extern "C" void G__set_cpp_environmenttrackO2Dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Track.h");
  G__add_compiledheader("Utils.h");
  G__add_compiledheader("Constants.h");
  G__add_compiledheader("Track.h");
  G__add_compiledheader("Utils.h");
  G__add_compiledheader("Constants.h");
  G__cpp_reset_tagtabletrackO2Dict();
}
#include <new>
extern "C" int G__cpp_dllrevtrackO2Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* AliceO2::Base::Track::TrackPar */
static int G__trackO2Dict_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliceO2::Base::Track::TrackPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AliceO2::Base::Track::TrackPar(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) AliceO2::Base::Track::TrackPar(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliceO2::Base::Track::TrackPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliceO2::Base::Track::TrackPar(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) AliceO2::Base::Track::TrackPar(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliceO2::Base::Track::TrackPar(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) AliceO2::Base::Track::TrackPar(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliceO2::Base::Track::TrackPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AliceO2::Base::Track::TrackPar(*(AliceO2::Base::Track::TrackPar*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AliceO2::Base::Track::TrackPar(*(AliceO2::Base::Track::TrackPar*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AliceO2::Base::Track::TrackPar& obj = ((AliceO2::Base::Track::TrackPar*) G__getstructoffset())->operator=(*(AliceO2::Base::Track::TrackPar*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((AliceO2::Base::Track::TrackPar*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->operator[]((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->operator float*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->GetParam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->GetAlpha());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->GetSnp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->GetTgl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->GetQ2Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->GetCurvature((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_174_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackPar*) G__getstructoffset())->GetSign());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliceO2::Base::Track::TrackPar G__TAliceO2cLcLBasecLcLTrackcLcLTrackPar;
static int G__trackO2Dict_174_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliceO2::Base::Track::TrackPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliceO2::Base::Track::TrackPar*) (soff+(sizeof(AliceO2::Base::Track::TrackPar)*i)))->~G__TAliceO2cLcLBasecLcLTrackcLcLTrackPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliceO2::Base::Track::TrackPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliceO2::Base::Track::TrackPar*) (soff))->~G__TAliceO2cLcLBasecLcLTrackcLcLTrackPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliceO2::Base::Track::TrackParCov */
static int G__trackO2Dict_175_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliceO2::Base::Track::TrackParCov* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AliceO2::Base::Track::TrackParCov(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) AliceO2::Base::Track::TrackParCov(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliceO2::Base::Track::TrackParCov* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliceO2::Base::Track::TrackParCov(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) AliceO2::Base::Track::TrackParCov(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliceO2::Base::Track::TrackParCov(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) AliceO2::Base::Track::TrackParCov(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliceO2::Base::Track::TrackParCov* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AliceO2::Base::Track::TrackParCov(*(AliceO2::Base::Track::TrackParCov*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AliceO2::Base::Track::TrackParCov(*(AliceO2::Base::Track::TrackParCov*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AliceO2::Base::Track::TrackParCov& obj = ((AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->operator=(*(AliceO2::Base::Track::TrackParCov*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->operator ::TrackPar*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         AliceO2::Base::Track::TrackPar* pobj;
         AliceO2::Base::Track::TrackPar xobj = ((AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->operator ::AliceO2::Base::Track::TrackPar();
         pobj = new AliceO2::Base::Track::TrackPar(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AliceO2::Base::Track::TrackPar& obj = ((AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->operator ::TrackPar&();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->operator[]((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->operator float*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetParam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetCov());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetAlpha());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSnp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetTgl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetQ2Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetCurvature((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSign());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigmaY2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigmaZY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigmaZ2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigmaSnpY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigmaSnpZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigmaSnp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigmaTglY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigmaTglZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigmaTglSnp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigmaTgl2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigma1PtY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigma1PtZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigma1PtSnp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigma1PtTgl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__trackO2Dict_175_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AliceO2::Base::Track::TrackParCov*) G__getstructoffset())->GetSigma1Pt2());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliceO2::Base::Track::TrackParCov G__TAliceO2cLcLBasecLcLTrackcLcLTrackParCov;
static int G__trackO2Dict_175_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliceO2::Base::Track::TrackParCov*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliceO2::Base::Track::TrackParCov*) (soff+(sizeof(AliceO2::Base::Track::TrackParCov)*i)))->~G__TAliceO2cLcLBasecLcLTrackcLcLTrackParCov();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliceO2::Base::Track::TrackParCov*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliceO2::Base::Track::TrackParCov*) (soff))->~G__TAliceO2cLcLBasecLcLTrackcLcLTrackParCov();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* AliceO2::Base::Track::TrackPar */

/* AliceO2::Base::Track::TrackParCov */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunctrackO2Dict {
 public:
  G__Sizep2memfunctrackO2Dict(): p(&G__Sizep2memfunctrackO2Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunctrackO2Dict::*p)();
};

size_t G__get_sizep2memfunctrackO2Dict()
{
  G__Sizep2memfunctrackO2Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancetrackO2Dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabletrackO2Dict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__trackO2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__trackO2DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__trackO2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__trackO2DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__trackO2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__trackO2DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__trackO2DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__trackO2DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__trackO2DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__trackO2DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* AliceO2::Base::Track::TrackPar */
static void G__setup_memvarAliceO2cLcLBasecLcLTrackcLcLTrackPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar));
   { AliceO2::Base::Track::TrackPar *p; p=(AliceO2::Base::Track::TrackPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"mParam[7]=",0,"x,alpha + 5 parameters");
   }
   G__tag_memvar_reset();
}


   /* AliceO2::Base::Track::TrackParCov */
static void G__setup_memvarAliceO2cLcLBasecLcLTrackcLcLTrackParCov(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov));
   { AliceO2::Base::Track::TrackParCov *p; p=(AliceO2::Base::Track::TrackParCov*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"mParCov[22]=",0,"x, alpha + 5 parameters + 15 errors");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvartrackO2Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAliceO2cLcLBasecLcLTrackcLcLTrackPar(void) {
   /* AliceO2::Base::Track::TrackPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar));
   G__memfunc_setup("TrackPar",792,G__trackO2Dict_174_0_1, 105, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar), -1, 0, 3, 1, 1, 0, 
"f - - 0 - x f - - 0 - alpha "
"F - - 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackPar",792,G__trackO2Dict_174_0_2, 105, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar), -1, 0, 4, 1, 1, 0, 
"F - - 10 - xyz F - - 10 - pxpypz "
"i - - 0 - sign g - - 0 'true' sectorAlpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackPar",792,G__trackO2Dict_174_0_3, 105, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar), -1, 0, 1, 1, 1, 0, "u 'AliceO2::Base::Track::TrackPar' - 11 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__trackO2Dict_174_0_4, 117, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar), -1, 1, 1, 1, 1, 0, "u 'AliceO2::Base::Track::TrackPar' - 11 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__trackO2Dict_174_0_5, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__trackO2Dict_174_0_6, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator float*",1484,G__trackO2Dict_174_0_7, 70, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParam",785,G__trackO2Dict_174_0_8, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__trackO2Dict_174_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlpha",774,G__trackO2Dict_174_0_10, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__trackO2Dict_174_0_11, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__trackO2Dict_174_0_12, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSnp",593,G__trackO2Dict_174_0_13, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTgl",583,G__trackO2Dict_174_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQ2Pt",615,G__trackO2Dict_174_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurvature",1249,G__trackO2Dict_174_0_16, 102, -1, -1, 0, 1, 1, 1, 8, "f - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSign",689,G__trackO2Dict_174_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackPar", 918, G__trackO2Dict_174_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliceO2cLcLBasecLcLTrackcLcLTrackParCov(void) {
   /* AliceO2::Base::Track::TrackParCov */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov));
   G__memfunc_setup("TrackParCov",1088,G__trackO2Dict_175_0_1, 105, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov), -1, 0, 4, 1, 1, 0, 
"f - - 0 - x f - - 0 - alpha "
"F - - 10 - par F - - 10 - cov", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackParCov",1088,G__trackO2Dict_175_0_2, 105, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov), -1, 0, 5, 1, 1, 0, 
"F - - 10 - xyz F - - 10 - pxpypz "
"F - - 10 - - i - - 0 - sign "
"g - - 0 'true' sectorAlpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackParCov",1088,G__trackO2Dict_175_0_3, 105, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov), -1, 0, 1, 1, 1, 0, "u 'AliceO2::Base::Track::TrackParCov' - 11 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__trackO2Dict_175_0_4, 117, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov), -1, 1, 1, 1, 1, 0, "u 'AliceO2::Base::Track::TrackParCov' - 11 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator TrackPar*",1742,G__trackO2Dict_175_0_5, 85, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator AliceO2::Base::Track::TrackPar",3535,G__trackO2Dict_175_0_6, 117, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator TrackPar&",1738,G__trackO2Dict_175_0_7, 117, G__get_linked_tagnum(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__trackO2Dict_175_0_8, 102, -1, -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__trackO2Dict_175_0_9, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator float*",1484,G__trackO2Dict_175_0_10, 70, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParam",785,G__trackO2Dict_175_0_11, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCov",584,G__trackO2Dict_175_0_12, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__trackO2Dict_175_0_13, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlpha",774,G__trackO2Dict_175_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__trackO2Dict_175_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__trackO2Dict_175_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSnp",593,G__trackO2Dict_175_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTgl",583,G__trackO2Dict_175_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQ2Pt",615,G__trackO2Dict_175_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurvature",1249,G__trackO2Dict_175_0_20, 102, -1, -1, 0, 1, 1, 1, 8, "f - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSign",689,G__trackO2Dict_175_0_21, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaY2",924,G__trackO2Dict_175_0_22, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaZY",964,G__trackO2Dict_175_0_23, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaZ2",925,G__trackO2Dict_175_0_24, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaSnpY",1179,G__trackO2Dict_175_0_25, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaSnpZ",1180,G__trackO2Dict_175_0_26, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaSnp2",1140,G__trackO2Dict_175_0_27, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaTglY",1169,G__trackO2Dict_175_0_28, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaTglZ",1170,G__trackO2Dict_175_0_29, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaTglSnp",1385,G__trackO2Dict_175_0_30, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaTgl2",1130,G__trackO2Dict_175_0_31, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigma1PtY",1119,G__trackO2Dict_175_0_32, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigma1PtZ",1120,G__trackO2Dict_175_0_33, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigma1PtSnp",1335,G__trackO2Dict_175_0_34, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigma1PtTgl",1325,G__trackO2Dict_175_0_35, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigma1Pt2",1080,G__trackO2Dict_175_0_36, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackParCov", 1214, G__trackO2Dict_175_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunctrackO2Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaltrackO2Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_functrackO2Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__trackO2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__trackO2DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__trackO2DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__trackO2DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__trackO2DictLN_AliceO2 = { "AliceO2" , 110 , -1 };
G__linked_taginfo G__trackO2DictLN_AliceO2cLcLBase = { "AliceO2::Base" , 110 , -1 };
G__linked_taginfo G__trackO2DictLN_AliceO2cLcLBasecLcLTrack = { "AliceO2::Base::Track" , 110 , -1 };
G__linked_taginfo G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar = { "AliceO2::Base::Track::TrackPar" , 99 , -1 };
G__linked_taginfo G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov = { "AliceO2::Base::Track::TrackParCov" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabletrackO2Dict() {
  G__trackO2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__trackO2DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__trackO2DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__trackO2DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__trackO2DictLN_AliceO2.tagnum = -1 ;
  G__trackO2DictLN_AliceO2cLcLBase.tagnum = -1 ;
  G__trackO2DictLN_AliceO2cLcLBasecLcLTrack.tagnum = -1 ;
  G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar.tagnum = -1 ;
  G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabletrackO2Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__trackO2DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__trackO2DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__trackO2DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__trackO2DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__trackO2DictLN_AliceO2);
   G__get_linked_tagnum_fwd(&G__trackO2DictLN_AliceO2cLcLBase);
   G__get_linked_tagnum_fwd(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackPar),sizeof(AliceO2::Base::Track::TrackPar),-1,36352,(char*)NULL,G__setup_memvarAliceO2cLcLBasecLcLTrackcLcLTrackPar,G__setup_memfuncAliceO2cLcLBasecLcLTrackcLcLTrackPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__trackO2DictLN_AliceO2cLcLBasecLcLTrackcLcLTrackParCov),sizeof(AliceO2::Base::Track::TrackParCov),-1,36352,(char*)NULL,G__setup_memvarAliceO2cLcLBasecLcLTrackcLcLTrackParCov,G__setup_memfuncAliceO2cLcLBasecLcLTrackcLcLTrackParCov);
}
extern "C" void G__cpp_setuptrackO2Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setuptrackO2Dict()");
  G__set_cpp_environmenttrackO2Dict();
  G__cpp_setup_tagtabletrackO2Dict();

  G__cpp_setup_inheritancetrackO2Dict();

  G__cpp_setup_typetabletrackO2Dict();

  G__cpp_setup_memvartrackO2Dict();

  G__cpp_setup_memfunctrackO2Dict();
  G__cpp_setup_globaltrackO2Dict();
  G__cpp_setup_functrackO2Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunctrackO2Dict();
  return;
}
class G__cpp_setup_inittrackO2Dict {
  public:
    G__cpp_setup_inittrackO2Dict() { G__add_setup_func("trackO2Dict",(G__incsetup)(&G__cpp_setuptrackO2Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_inittrackO2Dict() { G__remove_setup_func("trackO2Dict"); }
};
G__cpp_setup_inittrackO2Dict G__cpp_setup_initializertrackO2Dict;

